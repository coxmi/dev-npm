// Semantic grid system – http://semantic.gs
// With a few edits for no-gutter columns

// Grid settings – to be overwritten in base.less
@column-width: 60; 
@gutter-width: 20;
@columns: 12;

// Utility variable — you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;
@total-width: @gridsystem-width; 
@total-width: 100%;  // Set @total-width to 100% for a fluid layout

.row(@columns:@columns) {
	display: block;
	width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	.clearfix;
}

.column(@x,@columns:@columns) {
	display: inline;
	float: left;
	width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
	margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.push(@offset:1) {
	margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.pull(@offset:1) {
	margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.column-nogutter(@x,@columns:@columns) {
    @gridsystem-width: (@column-width*@columns) * 1px;
    display: inline; float: left;
    width: @total-width*(((@column-width)*@x) / @gridsystem-width);
} 

.reset-column, .column-reset {
	width:auto;
	float:none;
	display:inline;
	margin:auto;
}

.reset-row, .row-reset {
	width:auto;
	display:block;
	margin:auto;
}